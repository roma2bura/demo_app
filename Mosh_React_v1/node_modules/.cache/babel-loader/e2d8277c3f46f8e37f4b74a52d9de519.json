{"ast":null,"code":"var _jsxFileName = \"/Users/r2b/Desktop/DEV/Mosh_react/app2/app2/src/components/counter.js\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      imageUrl: \"https://picsum.photos/200\"\n    };\n  }\n\n  render() {\n    let classes = this.getBadgeClasses();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, this.formatCount()), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"Increment\")); //jsx expression must have one parent element in this case div\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\"; // what always there\n\n    classes += this.state.count === 0 ? \"warning\" : \"primary\"; // if count 0 then badge-warning applies otherwise badge-primary applies.\n\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count; // count equals to zero then x applies otherwise count applies.\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/r2b/Desktop/DEV/Mosh_react/app2/app2/src/components/counter.js"],"names":["React","Component","Counter","state","count","imageUrl","render","classes","getBadgeClasses","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADsB;AAAA;;AAM9BC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,KAAKC,eAAL,EAAd;AAEA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKE,WAAL,EAA3B,CADF,eAEE;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,CAHO,CAQJ;AACJ;;AAEDD,EAAAA,eAAe,GAAG;AAChB,QAAID,OAAO,GAAG,kBAAd,CADgB,CACkB;;AAClCA,IAAAA,OAAO,IAAI,KAAKJ,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD,CAFgB,CAE2C;;AAC3D,WAAOG,OAAP;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEL,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B,CAFY,CAEyB;AACtC;;AA1B6B;;AA6BhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    imageUrl: \"https://picsum.photos/200\",\n  };\n\n  render() {\n    let classes = this.getBadgeClasses();\n\n    return (\n      <React.Fragment>\n        <span className={classes}>{this.formatCount()}</span>\n        <button className=\"btn btn-secondary btn-sm\">Increment</button>\n      </React.Fragment>\n    ); //jsx expression must have one parent element in this case div\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\"; // what always there\n    classes += this.state.count === 0 ? \"warning\" : \"primary\"; // if count 0 then badge-warning applies otherwise badge-primary applies.\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count; // count equals to zero then x applies otherwise count applies.\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}