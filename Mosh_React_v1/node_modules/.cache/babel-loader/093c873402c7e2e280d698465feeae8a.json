{"ast":null,"code":"var _jsxFileName = \"/Users/r2b/Desktop/DEV/Mosh_react/app2/app2/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      console.log(counter);\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        // to map each counter\n        c.value = 0; // return value 0\n\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleReset,\n      className: \"btn btn-primary btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Reset\"), this.state.counters.map(counter => /*#__PURE__*/React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      onIncremenet: this.handleDelete,\n      counter: counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/r2b/Desktop/DEV/Mosh_react/app2/app2/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","console","log","handleReset","map","c","setState","handleDelete","counterId","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KADuB;;AAAA,SAS/BC,eAT+B,GASZC,OAAD,IAAa;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAX8B;;AAAA,SAa/BG,WAb+B,GAajB,MAAM;AAClB,YAAMP,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAyBC,CAAD,IAAO;AAC9C;AACAA,QAAAA,CAAC,CAACP,KAAF,GAAU,CAAV,CAF8C,CAEjC;;AACb,eAAOO,CAAP;AACD,OAJgB,CAAjB;AAKA,WAAKC,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACD,KApB8B;;AAAA,SAsB/BW,YAtB+B,GAsBfC,SAAD,IAAe;AAC5B,YAAMZ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA4BJ,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASW,SAA3C,CAAjB;AACA,WAAKF,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACD,KAzB8B;AAAA;;AA2B/Bc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,KAAKP,WADhB;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAQG,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAyBJ,OAAD,iBACvB,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACH,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKU,YAFjB;AAGE,MAAA,YAAY,EAAE,KAAKA,YAHrB;AAIE,MAAA,OAAO,EAAEP,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CARH,CADF;AAmBD;;AA/C8B;;AAkDjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n  handleIncrement = (counter) => {\n    console.log(counter);\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      // to map each counter\n      c.value = 0; // return value 0\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.handleReset}\n          className=\"btn btn-primary btn-sm m-2\"\n        >\n          Reset\n        </button>\n\n        {this.state.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            onIncremenet={this.handleDelete}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}